{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setQuery","hasError","setError","isFindedFilm","setIsFindedFilm","isSubmitedForm","setSubmitedForm","setMovie","loadMoviesFromServer","useCallback","queryFromUser","a","movieFromServer","Title","Plot","imdbID","Poster","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","newMovie","prevMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb150a38.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=72d89670';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import {\n  FC,\n  FormEvent,\n  useCallback,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ninterface FindMovieProps {\n  addMovie: (movie: Movie) => void;\n}\n\nconst FILM_URL = 'https://www.imdb.com/title';\n// eslint-disable-next-line max-len\nconst DEFAULT_PICTURE = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const FindMovie: FC<FindMovieProps> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [hasError, setError] = useState(false);\n  const [isFindedFilm, setIsFindedFilm] = useState(false);\n  const [isSubmitedForm, setSubmitedForm] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const changeQuery = (queryFromUser: string) => {\n    setQuery(queryFromUser);\n    setError(false);\n  };\n\n  const loadMoviesFromServer = useCallback(async (queryFromUser) => {\n    const movieFromServer = await getMovie(queryFromUser);\n\n    if ('Error' in movieFromServer) {\n      setError(true);\n      setSubmitedForm(false);\n\n      return;\n    }\n\n    const {\n      Title,\n      Plot,\n      imdbID,\n      Poster,\n    } = movieFromServer;\n\n    setMovie({\n      title: Title,\n      description: Plot,\n      imgUrl: Poster === 'N/A' ? DEFAULT_PICTURE : Poster,\n      imdbUrl: `${FILM_URL}/${imdbID}`,\n      imdbId: imdbID,\n    });\n    setIsFindedFilm(true);\n    setSubmitedForm(false);\n  }, []);\n\n  const handleSubmitFindMovie = (event: FormEvent) => {\n    event.preventDefault();\n    loadMoviesFromServer(query);\n    setSubmitedForm(true);\n  };\n\n  const handleButtonAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n      setIsFindedFilm(false);\n      setMovie(movie);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmitFindMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => changeQuery(event.target.value)}\n            />\n          </div>\n\n          {hasError\n          && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isSubmitedForm,\n              })}\n              disabled={!query}\n            >\n              {isFindedFilm\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {isFindedFilm && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleButtonAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {isFindedFilm\n      && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    setMovies(prevMovies => {\n      const isMovieInMovies = prevMovies.some(({ imdbId }) => (\n        imdbId === newMovie.imdbId));\n\n      return isMovieInMovies\n        ? prevMovies\n        : [...prevMovies, newMovie];\n    });\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}